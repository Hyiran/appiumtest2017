package com.oribo.android365.automationtest.personcenter.personinfo;

import java.util.HashMap;
import java.util.Map;
import java.util.logging.Logger;

import org.apache.xalan.trace.EndSelectionEvent;
import org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression;
import org.testng.annotations.AfterTest;

import com.oribo.common.Constant;
import com.oribo.common.TestcaseFrame;
import com.oribo.common.CommonButton;
import com.oribo.common.Driver;
import com.oribo.common.SetExcelDataIndex;
import com.oribo.dataprovider.DataBean;
import com.oribo.log.LoggerTestOne;
import com.oribo.log.LoggerTestTow;
import com.oribo.report.CreateHtmlreport;
import com.oribo.report.MessageOutput;
import com.oribo.log.LoggerUtil;
import com.oribo.log.LoggerUtil.loggerLevel;

import io.appium.java_client.android.AndroidElement;

/**
 * 个人信息-手机号
 * @author Administrator
 *
 */
public class CheckAccount extends TestcaseFrame {
	Logger mLogger;
	public static  Map<Integer, DataBean>  data = new HashMap<>();
	public static String logaccout ;

	public void testStart(){

		int index = SetExcelDataIndex.setAccoutChDataIndex();
		if (cheakAccout(index, LoggerTestOne.class)) {
			checkChangePone(index+1, LoggerTestTow.class);
		}
	}

	private boolean cheakAccout(int index ,Class<?> classname){

		DataBean  bean =  data.get(index);
		Logger logger =LoggerUtil.getwriteFileLog(Constant.ACCOUNTCHECK,bean.getTestCaseName(), classname);
		try {
			AndroidElement  elment = Driver.getAndroidDriver(null).findElementByXPath("//android.widget.TextView[contains(@text,'已绑定手机号')]");
			if (elment !=null) {
				System.out.println("elment  绑定手机号start");
				//LoggerUtil.logOutput(logger, loggerLevel.LEVLEINFO, bean.getTestCaseName()+"测试数据--"+bean.getData());
				System.out.println("elment  绑定手机号"+elment.getText());
				String str = elment.getText();
				
				if (str.contains(logaccout.substring(0, 3))&&str.contains(logaccout.substring(logaccout.length()-4, logaccout.length()))) {
					/*simpleAssertEquals(Driver.getAndroidDriver(null), bean, MessageOutput.SHOWLOGINACOUNT ,
							MessageOutput.SHOWLOGINACOUNT, logger, "测试用例"+bean.getTestCaseName()+" "+"检查账号显示正确");*/	
					newAssertEquals(Driver.getAndroidDriver(null),bean,bean.getExpectValue() , logger, "测试用例"+bean.getTestCaseName()+" "+"检查账号显示正确");
				} else{
					changaccuont(bean, logger);	
				}
															
			} else{
				//LoggerUtil.logOutput(logger, loggerLevel.LEVELSERVER, bean.getTestCaseName()+"测试数据--"+bean.getData());
				changaccuont(bean, logger);	
			}

		} catch (Exception e) {
			changaccuont(bean, logger);	
		}
		return true;

	}

	private void changaccuont(DataBean bean, Logger logger) {
	/*	simpleAssertEquals(Driver.getAndroidDriver(null), bean, MessageOutput.SHOWLOGINACOUNT ,
				MessageOutput.SHOWLOGINACOUNTER, logger, "测试用例"+bean.getTestCaseName()+" "+"检查账号显示错误");*/
		newAssertEquals(Driver.getAndroidDriver(null),bean,MessageOutput.SHOWLOGINACOUNTER , logger, "测试用例"+bean.getTestCaseName()+" "+"检查账号显示错误");
	}

	private boolean checkChangePone(int index,Class<?> classname){
		DataBean  bean = data.get(index);
		Logger logger =LoggerUtil.getwriteFileLog(Constant.ACCOUNTCHECK,bean.getTestCaseName(), classname);
		try {
			AndroidElement  elment = Driver.getAndroidDriver(null).findElementByClassName("android.widget.Button");
			if (elment != null) {
				elment.click();
				 newSleep(1);
				AndroidElement  next = Driver.getAndroidDriver(null).findElementByClassName("android.widget.Button"); 
				if (next !=null) {
					//LoggerUtil.logOutput(logger, loggerLevel.LEVLEINFO, bean.getTestCaseName()+"测试数据--"+"能成功进入更换账号页面");
					/*simpleAssertEquals(Driver.getAndroidDriver(null), bean, MessageOutput.SHOWLOGINACOUNT ,
							MessageOutput.SHOWLOGINACOUNT, logger, "测试用例"+bean.getTestCaseName()+" "+"能成功进入更换账号页面");*/
					newAssertEquals(Driver.getAndroidDriver(null),bean,bean.getExpectValue() , logger, "测试用例"+bean.getTestCaseName()+" "+"能成功进入更换账号页面");
					CommonButton.backButton();
					 newSleep(1);
					CommonButton.backButton();
				} else{
					failtoChange(bean, logger);	 
				}
			} else{
				failtoChange(bean, logger);	
			}
		} catch (Exception e) {
			failtoChange(bean, logger);	
		}
		return  true;

	}


	private void failtoChange(DataBean bean, Logger logger) {
		//LoggerUtil.logOutput(logger, loggerLevel.LEVELSERVER, bean.getTestCaseName()+"测试数据--"+bean.getData()+"更换账号按钮不存在");
	/*	simpleAssertEquals(Driver.getAndroidDriver(null), bean, MessageOutput.SHOWLOGINACOUNT ,
				MessageOutput.SHOWLOGINACOUNTER, logger, "测试用例"+bean.getTestCaseName()+" "+"更换账号按钮不存在");*/
		newAssertEquals(Driver.getAndroidDriver(null),bean,	MessageOutput.SHOWLOGINACOUNTER , logger, "测试用例"+bean.getTestCaseName()+" "+"更换账号按钮不存在");
	}
	
	@AfterTest
	public void tearDown(){
		//关闭appium 资源
		Driver.getAndroidDriver(null).quit();
		//关闭 html 的写操作
		 CreateHtmlreport.closeLog();
	}

}
